{% comment %}
  Before & After Slider (Using Metafields for Dynamic Images)
{% endcomment %}

{% assign before_image = product.metafields.custom.before_image | img_url: 'master' %}
{% assign after_image = product.metafields.custom.after_image | img_url: 'master' %}

{% if before_image != blank and after_image != blank %}
  <div class="before-after-wrapper">
    <figure>
      <div id="before_after_{{ product.id }}" class="before-after-slider"></div>
      <div class="before-after-handle"></div>
    </figure>
  </div>

  <style>
    :root {
      --before-image: url({{ before_image }});
      --after-image: url({{ after_image }});
    }

    .before-after-wrapper {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 10;
      background-color: #1f1f1c;
      touch-action: none;
      user-select: none;
      -webkit-user-select: none;
    }

    .before-after-wrapper figure {
      background-image: var(--after-image);
      position: relative;
      margin: 0;
      background-size: cover;
      width: 100%;
      height: 100%;
    }

    .before-after-slider {
      background-image: var(--before-image);
      background-size: cover;
      bottom: 0;
      border-right: 5px solid rgba(255, 255, 255, 0.7);
      box-shadow: 10px 0 15px -13px #000;
      height: 100%;
      width: 50%;
      position: absolute;
      animation: first 2s 1 normal ease-in-out 0.1s;
    }

    .before-after-handle {
      position: absolute;
      top: 0;
      left: 50%;
      width: 40px;
      height: 100%;
      background: rgba(255, 255, 255, 0.7);
      cursor: col-resize;
      z-index: 30;
      transform: translateX(-50%);
      transition: background-color 0.2s;
    }

    .before-after-handle:hover {
      background: rgba(255, 255, 255, 0.9);
    }

    .before-after-handle::before {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: 24px;
      height: 24px;
      background: url('https://assets.codepen.io/191814/comparision.png') no-repeat center;
      background-size: contain;
      transform: translate(-50%, -50%);
    }

    @keyframes first {
      0% { width: 0%; }
      50% { width: 80%; }
      100% { width: 50%; }
    }
  </style>

  <script>
    function beforeAfter(productId) {
      const slider = document.getElementById("before_after_" + productId);
      const handle = slider.parentElement.querySelector('.before-after-handle');
      const wrapper = slider.closest('.before-after-wrapper');
      
      if (slider && handle && wrapper) {
        let isDragging = false;
        let startX;
        let startWidth;

        function startDragging(e) {
          isDragging = true;
          startX = e.type === 'mousedown' ? e.clientX : e.touches[0].clientX;
          startWidth = slider.offsetWidth;
          wrapper.style.cursor = 'col-resize';
        }

        function stopDragging() {
          isDragging = false;
          wrapper.style.cursor = '';
        }

        function updateSlider(e) {
          if (!isDragging) return;
          
          const currentX = e.type === 'mousemove' ? e.clientX : e.touches[0].clientX;
          const diff = currentX - startX;
          const newWidth = startWidth + diff;
          const wrapperWidth = wrapper.offsetWidth;
          
          let percentage = (newWidth / wrapperWidth) * 100;
          percentage = Math.max(0, Math.min(100, percentage));
          
          slider.style.width = percentage + '%';
          handle.style.left = percentage + '%';
        }

        // Remover listeners anteriores
        handle.removeEventListener('mousedown', startDragging);
        handle.removeEventListener('touchstart', startDragging);
        document.removeEventListener('mousemove', updateSlider);
        document.removeEventListener('touchmove', updateSlider);
        document.removeEventListener('mouseup', stopDragging);
        document.removeEventListener('touchend', stopDragging);

        // Agregar nuevos listeners
        handle.addEventListener('mousedown', startDragging);
        handle.addEventListener('touchstart', startDragging);
        document.addEventListener('mousemove', updateSlider);
        document.addEventListener('touchmove', updateSlider);
        document.addEventListener('mouseup', stopDragging);
        document.addEventListener('touchend', stopDragging);
      }
    }

    // Función para reinicializar el slider
    function reinitializeSlider() {
      setTimeout(() => {
        beforeAfter({{ product.id }});
      }, 50);
    }

    // Inicializar el slider cuando el DOM esté listo
    document.addEventListener('DOMContentLoaded', reinitializeSlider);

    // Reinicializar el slider cuando cambie el thumbnail
    document.addEventListener('t4s:mediaChange', reinitializeSlider);

    // Reinicializar cuando la galería esté lista
    document.addEventListener('flickityt4s:ready', reinitializeSlider);

    // Reinicializar cuando cambie la galería
    document.addEventListener('flickityt4s:change', reinitializeSlider);

    // Reinicializar cuando se haga clic en cualquier thumbnail
    document.addEventListener('click', function(e) {
      if (e.target.closest('.t4s-product__media-item')) {
        reinitializeSlider();
      }
    });
  </script>
{% endif %}
