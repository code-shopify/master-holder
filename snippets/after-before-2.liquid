{% comment %}
  Before & After Slider (Using Metafields for Dynamic Images)
{% endcomment %}

{% assign before_image = product.metafields.custom.before_image | img_url: 'master' %}
{% assign after_image = product.metafields.custom.after_image | img_url: 'master' %}

{% if before_image != blank and after_image != blank %}
  <div class="before-after-wrapper">
    <figure>
      <div id="before_after_{{ product.id }}" class="before-after-slider"></div>
    </figure>
    <input 
      type="range" 
      min="0" 
      max="100" 
      value="50" 
      id="before_after_slider_{{ product.id }}" 
      class="before-after-range"
    />
  </div>

  <style>
    :root {
      --before-image: url({{ before_image }});
      --after-image: url({{ after_image }});
    }

    .before-after-wrapper {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 10;
      background-color: #1f1f1c;
      touch-action: none;
    }

    .before-after-wrapper figure {
      background-image: var(--after-image);
      position: relative;
      margin: 0;
      background-size: cover;
      width: 100%;
      height: 100%;
    }

    .before-after-slider {
      background-image: var(--before-image);
      background-size: cover;
      bottom: 0;
      border-right: 5px solid rgba(255, 255, 255, 0.7);
      box-shadow: 10px 0 15px -13px #000;
      height: 100%;
      width: 50%;
      position: absolute;
      animation: first 2s 1 normal ease-in-out 0.1s;
    }

    .before-after-range {
      -moz-appearance: none;
      -webkit-appearance: none;
      border: none;
      background: transparent;
      cursor: col-resize;
      height: 100%;
      left: 0;
      margin: 0;
      outline: none;
      padding: 0;
      position: absolute;
      top: 0;
      width: 100%;
      z-index: 20;
      touch-action: none;
      -webkit-tap-highlight-color: transparent;
    }

    .before-after-range::-webkit-slider-thumb {
      -webkit-appearance: none;
      height: 100%;
      width: 40px;
      opacity: 0.01;
      cursor: col-resize;
    }

    .before-after-range::-moz-range-thumb {
      -moz-appearance: none;
      height: 100%;
      width: 40px;
      opacity: 0.01;
      cursor: col-resize;
    }

    .before-after-range::-ms-thumb {
      appearance: none;
      height: 100%;
      width: 40px;
      opacity: 0.01;
      cursor: col-resize;
    }

    .before-after-slider::before {
      background: url('https://assets.codepen.io/191814/comparision.png') no-repeat center;
      background-size: contain;
      content: " ";
      float: right;
      height: 100%;
      margin-right: -34px;
      position: relative;
      top: 0;
      width: 64px;
    }

    @keyframes first {
      0% { width: 0%; }
      50% { width: 80%; }
      100% { width: 50%; }
    }
  </style>

  <script>
  class BeforeAfterSlider {
    constructor(productId) {
      this.productId = productId;
      this.initialize();
    }

    initialize() {
      // Obtener elementos cada vez que se inicializa
      this.slider = document.getElementById("before_after_" + this.productId);
      this.range = document.getElementById("before_after_slider_" + this.productId);
      
      if (!this.slider || !this.range) return;
      
      // Remover listeners anteriores si existen
      if (this.boundUpdateSlider) {
        this.range.removeEventListener('input', this.boundUpdateSlider);
        this.range.removeEventListener('change', this.boundUpdateSlider);
      }
      
      // Crear nuevo binding para el evento
      this.boundUpdateSlider = this.updateSlider.bind(this);
      
      // Agregar nuevos listeners
      this.range.addEventListener('input', this.boundUpdateSlider);
      this.range.addEventListener('change', this.boundUpdateSlider);
      
      // Establecer valor inicial
      this.range.value = 50;
      this.slider.style.width = "50%";
    }

    updateSlider(e) {
      this.slider.style.width = this.range.value + "%";
    }
  }

  let sliderInstance = null;

  // Función para inicializar o reinicializar el slider
  function initializeBeforeAfter(productId) {
    if (sliderInstance) {
      sliderInstance.initialize();
    } else {
      sliderInstance = new BeforeAfterSlider(productId);
    }
  }

  // Inicializar cuando se carga el DOM
  document.addEventListener('DOMContentLoaded', () => {
    initializeBeforeAfter({{ product.id }});
  });

  // Reinicializar cuando se hace clic en el botón de imagen fija
  document.addEventListener('click', (e) => {
    if (e.target.closest('#toggleBeforeAfter')) {
      setTimeout(() => {
        initializeBeforeAfter({{ product.id }});
      }, 100);
    }
  });

  // Reinicializar cuando el contenedor se muestra
  const beforeAfterContainer = document.getElementById('before-after-container');
  if (beforeAfterContainer) {
    const observer = new MutationObserver((mutations) => {
      mutations.forEach((mutation) => {
        if (mutation.type === 'attributes' && mutation.attributeName === 'style') {
          const displayStyle = beforeAfterContainer.style.display;
          if (displayStyle !== 'none') {
            setTimeout(() => {
              initializeBeforeAfter({{ product.id }});
            }, 100);
          }
        }
      });
    });

    observer.observe(beforeAfterContainer, {
      attributes: true,
      attributeFilter: ['style']
    });
  }
</script>
{% endif %}
