{% comment %}
  Before & After Slider (Using Metafields for Dynamic Images)
{% endcomment %}

{% assign before_image = product.metafields.custom.before_image | img_url: 'master' %}
{% assign after_image = product.metafields.custom.after_image | img_url: 'master' %}

{% if before_image != blank and after_image != blank %}
  <div class="before-after-wrapper" data-before-after-wrapper>
    <figure>
      <div id="before_after_{{ product.id }}" class="before-after-slider"></div>
    </figure>
    <input 
      type="range" 
      min="0" 
      max="100" 
      value="50" 
      id="before_after_slider_{{ product.id }}" 
      class="before-after-range"
    />
  </div>

  <style>
    :root {
      --before-image: url({{ before_image }});
      --after-image: url({{ after_image }});
    }

    .before-after-wrapper {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 10;
      background-color: #1f1f1c;
      touch-action: none;
      opacity: 0;
      visibility: hidden;
      transition: opacity 0.3s ease, visibility 0.3s ease;
    }

    .before-after-wrapper.is--active {
      opacity: 1;
      visibility: visible;
    }

    .before-after-wrapper figure {
      background-image: var(--after-image);
      position: relative;
      margin: 0;
      background-size: cover;
      width: 100%;
      height: 100%;
    }

    .before-after-slider {
      background-image: var(--before-image);
      background-size: cover;
      bottom: 0;
      border-right: 5px solid rgba(255, 255, 255, 0.7);
      box-shadow: 10px 0 15px -13px #000;
      height: 100%;
      width: 50%;
      position: absolute;
      animation: first 2s 1 normal ease-in-out 0.1s;
    }

    .before-after-range {
      -moz-appearance: none;
      -webkit-appearance: none;
      border: none;
      background: transparent;
      cursor: col-resize;
      height: 100%;
      left: 0;
      margin: 0;
      outline: none;
      padding: 0;
      position: absolute;
      top: 0;
      width: 100%;
      z-index: 20;
      touch-action: none;
      -webkit-tap-highlight-color: transparent;
    }

    .before-after-range::-webkit-slider-thumb {
      -webkit-appearance: none;
      height: 100%;
      width: 40px;
      opacity: 0.01;
      cursor: col-resize;
    }

    .before-after-range::-moz-range-thumb {
      -moz-appearance: none;
      height: 100%;
      width: 40px;
      opacity: 0.01;
      cursor: col-resize;
    }

    .before-after-range::-ms-thumb {
      appearance: none;
      height: 100%;
      width: 40px;
      opacity: 0.01;
      cursor: col-resize;
    }

    .before-after-slider::before {
      background: url('https://assets.codepen.io/191814/comparision.png') no-repeat center;
      background-size: contain;
      content: " ";
      float: right;
      height: 100%;
      margin-right: -34px;
      position: relative;
      top: 0;
      width: 64px;
    }

    @keyframes first {
      0% { width: 0%; }
      50% { width: 80%; }
      100% { width: 50%; }
    }

    /* Nuevo botón para activar before-after */
    .t4s-before-after-trigger {
      position: absolute;
      top: 10px;
      right: 10px;
      z-index: 30;
      background: rgba(0,0,0,0.5);
      color: white;
      border: none;
      padding: 8px 12px;
      border-radius: 4px;
      cursor: pointer;
      font-size: 14px;
    }
  </style>

  <script>
    class BeforeAfterSlider {
      constructor(productId) {
        this.productId = productId;
        this.slider = document.getElementById("before_after_" + productId);
        this.range = document.getElementById("before_after_slider_" + productId);
        this.wrapper = document.querySelector('[data-before-after-wrapper]');
        this.isDragging = false;
        this.startX = 0;
        this.sliderLeft = 0;
        this.isInitialized = false;
        this.initialize();
      }

      initialize() {
        if (!this.slider || !this.range) return;
        
        // Limpiar listeners anteriores
        this.removeEventListeners();
        
        // Crear nuevos bindings
        this.boundUpdateSlider = this.updateSlider.bind(this);
        this.boundHandleMouseDown = this.handleMouseDown.bind(this);
        this.boundHandleMouseMove = this.handleMouseMove.bind(this);
        this.boundHandleMouseUp = this.handleMouseUp.bind(this);
        this.boundHandleTouchStart = this.handleTouchStart.bind(this);
        this.boundHandleTouchMove = this.handleTouchMove.bind(this);
        this.boundHandleTouchEnd = this.handleTouchEnd.bind(this);
        
        // Agregar nuevos listeners
        this.addEventListeners();
        
        // Establecer valor inicial
        this.range.value = 50;
        this.slider.style.width = "50%";

        // Marcar como inicializado
        this.isInitialized = true;

        // Integración con T4SThemeSP
        if (window.T4SThemeSP) {
          document.addEventListener('t4s:shopify:section:load', () => this.reinitialize());
          document.addEventListener('t4s:shopify:section:unload', () => this.destroy());
        }
      }

      reinitialize() {
        if (this.isInitialized) {
          this.destroy();
        }
        this.initialize();
      }

      addEventListeners() {
        if (!this.slider || !this.range) return;

        // Input events
        this.range.addEventListener('input', this.boundUpdateSlider);
        this.range.addEventListener('change', this.boundUpdateSlider);

        // Mouse events
        this.slider.addEventListener('mousedown', this.boundHandleMouseDown);
        document.addEventListener('mousemove', this.boundHandleMouseMove);
        document.addEventListener('mouseup', this.boundHandleMouseUp);

        // Touch events
        this.slider.addEventListener('touchstart', this.boundHandleTouchStart, { passive: true });
        document.addEventListener('touchmove', this.boundHandleTouchMove, { passive: false });
        document.addEventListener('touchend', this.boundHandleTouchEnd);

        // Integración con eventos del tema
        document.addEventListener('t4s:slider:changed', () => this.handleSliderChange());
        document.addEventListener('t4s:product:variantChange', () => this.handleVariantChange());
      }

      handleSliderChange() {
        if (this.wrapper && this.wrapper.classList.contains('is--active')) {
          this.reinitialize();
        }
      }

      handleVariantChange() {
        if (this.isInitialized) {
          this.reinitialize();
        }
      }

      updateSlider(e) {
        e.preventDefault();
        e.stopPropagation();
        const value = this.range.value;
        this.slider.style.width = value + "%";
      }

      handleMouseDown(e) {
        this.isDragging = true;
        this.startX = e.pageX;
        this.sliderLeft = this.slider.offsetLeft;
      }

      handleMouseMove(e) {
        if (!this.isDragging) return;
        e.preventDefault();
        this.updateSliderPosition(e.pageX);
      }

      handleMouseUp() {
        this.isDragging = false;
      }

      handleTouchStart(e) {
        this.isDragging = true;
        this.startX = e.touches[0].pageX;
        this.sliderLeft = this.slider.offsetLeft;
      }

      handleTouchMove(e) {
        if (!this.isDragging) return;
        e.preventDefault();
        this.updateSliderPosition(e.touches[0].pageX);
      }

      handleTouchEnd() {
        this.isDragging = false;
      }

      updateSliderPosition(pageX) {
        const walk = pageX - this.startX;
        const containerWidth = this.wrapper.offsetWidth;
        const percentage = ((this.sliderLeft + walk) / containerWidth) * 100;
        const boundedPercentage = Math.max(0, Math.min(100, percentage));
        
        this.range.value = boundedPercentage;
        this.slider.style.width = boundedPercentage + "%";
      }

      show() {
        if (this.wrapper) {
          this.wrapper.classList.add('is--active');
          // Reinicializar al mostrar
          this.initialize();
        }
      }

      hide() {
        if (this.wrapper) {
          this.wrapper.classList.remove('is--active');
        }
      }

      destroy() {
        this.removeEventListeners();
        this.isInitialized = false;
      }

      removeEventListeners() {
        if (this.boundUpdateSlider) {
          this.range.removeEventListener('input', this.boundUpdateSlider);
          this.range.removeEventListener('change', this.boundUpdateSlider);
          this.slider.removeEventListener('mousedown', this.boundHandleMouseDown);
          document.removeEventListener('mousemove', this.boundHandleMouseMove);
          document.removeEventListener('mouseup', this.boundHandleMouseUp);
          this.slider.removeEventListener('touchstart', this.boundHandleTouchStart);
          document.removeEventListener('touchmove', this.boundHandleTouchMove);
          document.removeEventListener('touchend', this.boundHandleTouchEnd);
        }
      }
    }

    // Mantener referencia global del slider
    let currentSlider = null;
    let sliderInitialized = false;

    // Función para inicializar el slider de manera segura
    function safeInitializeSlider() {
      try {
        if (window.T4SThemeSP && !window.T4SThemeSP.isLoaded) {
          document.addEventListener('t4s:ready', initializeSlider);
          return;
        }
        initializeSlider();
      } catch (error) {
        console.warn('Error initializing before/after slider:', error);
      }
    }

    function initializeSlider() {
      if (sliderInitialized) return;

      // Destruir instancia anterior si existe
      if (currentSlider) {
        currentSlider.destroy();
      }

      // Crear nueva instancia
      currentSlider = new BeforeAfterSlider({{ product.id }});
      
      // Agregar botón de trigger si no existe
      let trigger = document.querySelector('.t4s-before-after-trigger');
      if (!trigger) {
        trigger = document.createElement('button');
        trigger.className = 't4s-before-after-trigger';
        trigger.textContent = 'Compare';
        
        const wrapper = document.querySelector('[data-before-after-wrapper]');
        if (wrapper) {
          wrapper.parentElement.appendChild(trigger);
        }
      }

      // Actualizar eventos del trigger
      const newTrigger = trigger.cloneNode(true);
      trigger.parentNode.replaceChild(newTrigger, trigger);
      newTrigger.addEventListener('click', () => {
        if (currentSlider) {
          currentSlider.show();
        }
      });

      const wrapper = document.querySelector('[data-before-after-wrapper]');
      if (wrapper) {
        wrapper.addEventListener('click', (e) => {
          if (e.target === wrapper && currentSlider) {
            currentSlider.hide();
          }
        });
      }

      sliderInitialized = true;
    }

    // Inicializar cuando el DOM esté listo
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', safeInitializeSlider);
    } else {
      safeInitializeSlider();
    }

    // Reinicializar en eventos relevantes del tema
    const themeEvents = [
      't4s:mediaChange',
      'variant:changed', 
      'flickityt4s:ready',
      'flickityt4s:change',
      't4s:hideTooltip',
      't4s:showTooltip',
      't4s:sliderChanged'
    ];

    themeEvents.forEach(eventName => {
      document.addEventListener(eventName, () => {
        if (currentSlider) {
          currentSlider.reinitialize();
        } else {
          safeInitializeSlider();
        }
      });
    });

    // Reinicializar cuando cambie la visibilidad
    if ('IntersectionObserver' in window) {
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting && !sliderInitialized) {
            safeInitializeSlider();
          } else if (entry.isIntersecting && currentSlider) {
            currentSlider.reinitialize();
          }
        });
      });

      const wrapper = document.querySelector('[data-before-after-wrapper]');
      if (wrapper) {
        observer.observe(wrapper);
      }
    }

    // Integración con el sistema de eventos del tema
    if (window.T4SThemeSP) {
      document.addEventListener('t4s:ready', safeInitializeSlider);
      document.addEventListener('t4s:shopify:section:load', safeInitializeSlider);
    }
  </script>
{% endif %}
